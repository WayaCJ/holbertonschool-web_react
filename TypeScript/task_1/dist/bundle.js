!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t){var n=this&&this.__assign||function(){return(n=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};(function(){function e(e,t){this.firstName=e,this.lastName=t}e.prototype.workOnHomework=function(){return"Currently working"},e.prototype.displayName=function(){return this.firstName}})(),n({firstName:"Alice",lastName:"Johnson",fullTimeEmployee:!0,location:"San Francisco",yearsOfExperience:5},{contract:!0,department:"Math"}),function(e,t,r,o,i,a,u){n({firstName:e,lastName:t,fullTimeEmployee:r,location:o,numberOfReports:i,yearsOfExperience:a},u)}("Sarah","Williams",!0,"Los Angeles",10,8,{contract:!0,division:"Education"})}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,